{"version":3,"sources":["components/Xcomponent.jsx","components/Ycomponent.jsx","App.js","Reducer/Reducer.js","index.js"],"names":["connect","state","valuex","dispatch","incrementValueY","type","props","onClick","valuey","incrementValueX","App","className","initial_state","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"yQAWA,IAUeA,cAVO,SAACC,GACnB,MAAM,CACFC,OAAOD,EAAMC,SAGI,SAACC,GACtB,MAAM,CACFC,gBAAgB,kBAAID,EAAS,CAACE,KAAK,kBAG5BL,CAlBf,SAAoBM,GAChB,OACI,6BACK,8CAAoBA,EAAMJ,OAA1B,IAAkC,4BAAQK,QAASD,EAAMF,iBAAvB,eAAlC,QCGb,IAUeJ,cAVO,SAACC,GACnB,MAAM,CACFO,OAAOP,EAAMO,SAGI,SAACL,GACtB,MAAM,CACFM,gBAAgB,kBAAIN,EAAS,CAACE,KAAK,kBAG5BL,CAjBf,SAAoBM,GAChB,OACI,6BACI,8CAAoBA,EAAME,OAA1B,KAAmC,4BAAQD,QAASD,EAAMG,iBAAvB,eAAnC,QCWGC,MATf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,kkBCXN,IAAMC,EAAc,CAChBV,OAAO,EACPM,OAAO,GCMX,IAAMK,EAAQC,YDHC,WAA6C,IAA5Bb,EAA2B,uDAArBW,EAClC,QADuD,wCACzCP,MACV,IAAK,aACD,YACOJ,EADP,CAEIO,OAAOP,EAAMO,OAAO,IAE3B,IAAK,aACD,YACOP,EADP,CAEGC,OAAOD,EAAMC,OAAO,IAE5B,QACI,OAAOD,KCPnBc,IAASC,OAAO,kBAAC,IAAD,CAAUH,MAAQA,GAAlB,IAA0B,kBAAC,EAAD,MAA1B,KAA+CI,SAASC,eAAe,W","file":"static/js/main.1a287383.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\n\nfunction Xcomponent(props) {\n    return (\n        <div>\n             <h1> Increment X : {props.valuex} <button onClick={props.incrementValueY}>Increment Y</button> </h1>\n        </div>\n    )\n}\n\nconst mapStateToProps=(state)=>{\n    return{\n        valuex:state.valuex\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        incrementValueY:()=>dispatch({type:\"incrementY\"})\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Xcomponent)","import React from 'react'\nimport { connect } from 'react-redux';\nfunction Ycomponent(props) {\n    return (\n        <div>\n            <h1> Increment Y : {props.valuey}  <button onClick={props.incrementValueX}>Increment X</button> </h1>\n        </div>\n    )\n}\nconst mapStateToProps=(state)=>{\n    return{\n        valuey:state.valuey\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        incrementValueX:()=>dispatch({type:\"incrementX\"})\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(Ycomponent)","import React from 'react';\nimport \"./App.css\";\nimport Xcomponent from './components/Xcomponent';\nimport Ycomponent from './components/Ycomponent';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Xcomponent/>\n      <Ycomponent/>\n    </div>\n  );\n}\n\nexport default App;\n","const initial_state={\n    valuex:0,\n    valuey:0\n}\n\nexport default function Reducer(state=initial_state,action){\n    switch(action.type){\n        case \"incrementY\":\n            return{\n                ...state,\n                valuey:state.valuey+1\n            }\n         case \"incrementX\":\n             return{\n                 ...state,\n                valuex:state.valuex+1\n             }   \n        default:\n            return state;\n    }\n    \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport Reducer from \"./Reducer/Reducer\";\n\nconst store = createStore(Reducer);\n\n\nReactDOM.render(<Provider store ={store}> <App /> </Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}